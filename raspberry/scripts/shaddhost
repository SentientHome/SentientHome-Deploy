#!/bin/bash
# Add a new host to the SentientHome Master
# Oliver Ratzesberger
# MIT License

usage()
{
  cat << EOF
usage: $0 [options] hostname-of-rpi

Add a newly created host to the SentientHome Master

OPTIONS:
  --help|-h         Show this message
  --newpassword|-n  Set new root password for host
  --oldpassword|-o  Existing root password for new host default=hypriot

EOF
  exit 1
}

OLD_PASSWD="hypriot"

# translate long options to short
for arg
do
  delim=""
  case "${arg}" in
    --help) args="${args}-h ";;
    --newpassword) args="${args}-n ";;
    --oldpassword) args="${args}-o ";;
    # pass through anything else
    *) [[ "${arg:0:1}" == "-" ]] || delim="\""
      args="${args}${delim}${arg}${delim} ";;
  esac
done
# reset the translated args
eval set -- "$args"
# now we can process with getopt
while getopts "hn:o:" opt; do
  case $opt in
    h)  usage ;;
    p)  NEW_PASSWD=$OPTARG ;;
    o)  OLD_PASSWD=$OPTARG ;;
    \?) usage ;;
    :)
      echo "Option -$OPTARG requires an argument\n"
      usage
    ;;
  esac
done
shift $((OPTIND -1))

HOST=$1

if [ -z "${HOST}" ]; then
  echo "No host specified.\n"
  usage
fi


DOAMIN="${HOST##*.}"
HOSTNAME="${HOST%.*}"

function getip() { (traceroute $1 2>&1 | head -n 1 | cut -d\( -f 2 | cut -d\) -f 1) }
HOST_IP=$(getip ${HOSTNAME}.local)

if [ $? -eq 0 ]; then
  echo "$1 found at $HOST_IP."
else
  echo "$1 could not be located in network."
  exit 2
fi

ssh-keygen -R $HOST_IP

VAR=$(expect -c "expect '' \
  {eval spawn \
  ssh-copy-id -oStrictHostKeyChecking=no -oCheckHostIP=no root@${HOST_IP}; \
  interact -o -nobuffer -re .*assword.* return; \
  send "${OLD_PASSWD}\r"; send -- "\r"; \
  expect eof;} ")

echo $VAR

# ssh-copy-id -oStrictHostKeyChecking=no -oCheckHostIP=no root@$HOST_IP

if [ ! -z "${NEW_PASSWD}" ]; then
  echo "Changeing root password"
  ssh root@$HOST_IP passwd <<EOF
  ${NEW_PASSWD}
  ${NEW_PASSWD}
EOF
fi

if [ $? -eq 0 ]; then
  echo "🍺  Finished."
else
  echo "👎  Someting went wrong."
fi
